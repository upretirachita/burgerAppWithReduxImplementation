{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nabin\\\\Desktop\\\\tosibaReactbACKUP\\\\burgerAppRedux\\\\my-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Auxilary/Auxilary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axiosOrder';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandling from '../../hoc/withErrorHandling/withErroeHandling';\nimport * as actionTypes from '../../store/action';\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      //alert('You Continue!!');\n      // this.setState({loading:true})\n      // const order = {\n      //     ingredients: this.state.ingredients,\n      //     price: this.state.totalPrice,\n      //     customer: {\n      //         name:'Rachita Upreti',\n      //         address:{\n      //             street:'KÃ¤kitie 8B 1',\n      //             zipCode:'01450',\n      //             city:'Vantaa',\n      //             country:'Finland'\n      //         },\n      //         email:'test@gmail.com',\n      //         deliveryMethod:'Fastest'\n      //     }\n      // }\n      // axios.post('/orders.json',order)\n      //     .then(response=> {\n      //         this.setState({\n      //             loading:false,\n      //             purchasing:false});\n      //         })\n      //     .catch(error=>{\n      //         this.setState({loading:false,\n      //         purchasing:false});\n      //     });\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + _this.state.totalPrice);\n      var queryString = queryParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"check\", this.props); // axios.get('https://burgerapp-20fa8.firebaseio.com/ingredients.json')\n      // .then(response =>{\n      //     this.setState({\n      //         ingredients:response.data\n      //     });\n      // })\n      // .catch(error => {\n      //     this.setState({\n      //         error:true\n      //     })\n      // })\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igkey) {\n        return ingredients[igkey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disableInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disableInfo) {\n        disableInfo[key] = disableInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" Ingredients can't be loaded \") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientsAdded: this.props.onIngredientsAdded,\n          ingredientsReduced: this.props.onIngredientsRemove,\n          disabled: disableInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          purchaseCancelled: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      } //{salad:true, meat:false /true and so on}\n\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapsStateToProps = function mapsStateToProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nvar mapsDispatchToProps = function mapsDispatchToProps(dispatch) {\n  return {\n    onIngredientsAdded: function onIngredientsAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName\n      });\n    },\n    onIngredientsRemove: function onIngredientsRemove(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(withErrorHandling(BurgerBuilder, axios));","map":{"version":3,"sources":["C:\\Users\\Nabin\\Desktop\\tosibaReactbACKUP\\burgerAppRedux\\my-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandling","actionTypes","BurgerBuilder","state","purchasable","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","totalPrice","queryString","join","props","history","pathname","search","console","log","sum","Object","keys","map","igkey","reduce","el","disableInfo","ings","key","orderSummary","burger","onIngredientsAdded","onIngredientsRemove","mapsStateToProps","price","mapsDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../../hoc/Auxilary/Auxilary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axiosOrder';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandling from '../../hoc/withErrorHandling/withErroeHandling';\r\nimport * as actionTypes from '../../store/action'\r\n\r\n\r\n\r\nclass BurgerBuilder  extends Component{\r\n    state = {\r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n        }\r\n\r\n    componentDidMount (){\r\n        console.log(\"check\",this.props)\r\n        // axios.get('https://burgerapp-20fa8.firebaseio.com/ingredients.json')\r\n        // .then(response =>{\r\n        //     this.setState({\r\n        //         ingredients:response.data\r\n        //     });\r\n        // })\r\n        // .catch(error => {\r\n        //     this.setState({\r\n        //         error:true\r\n        //     })\r\n        // })\r\n    }\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n        .map(igkey=>{\r\n            return ingredients[igkey];\r\n        })\r\n        .reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        this.setState({\r\n            purchasable:sum>0\r\n        });\r\n    }\r\n\r\n    purchaseHandler = () =>{\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandler = ()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    \r\n    purchaseContinueHandler = () => {\r\n        //alert('You Continue!!');\r\n        // this.setState({loading:true})\r\n\r\n        // const order = {\r\n        //     ingredients: this.state.ingredients,\r\n        //     price: this.state.totalPrice,\r\n        //     customer: {\r\n        //         name:'Rachita Upreti',\r\n        //         address:{\r\n        //             street:'KÃ¤kitie 8B 1',\r\n        //             zipCode:'01450',\r\n        //             city:'Vantaa',\r\n        //             country:'Finland'\r\n        //         },\r\n        //         email:'test@gmail.com',\r\n        //         deliveryMethod:'Fastest'\r\n        //     }\r\n        // }\r\n            // axios.post('/orders.json',order)\r\n            //     .then(response=> {\r\n            //         this.setState({\r\n            //             loading:false,\r\n            //             purchasing:false});\r\n            //         })\r\n\r\n            //     .catch(error=>{\r\n            //         this.setState({loading:false,\r\n            //         purchasing:false});\r\n            //     });\r\n            const queryParams = [];\r\n            for ( let i in this.state.ingredients){\r\n                queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n            }\r\n            queryParams.push('price=' + this.state.totalPrice)\r\n            const queryString = queryParams.join('&');\r\n            this.props.history.push({\r\n                pathname: '/checkout',\r\n                search:'?' + queryString\r\n            });\r\n     }\r\n\r\n   \r\n   \r\nrender (){  \r\n    const disableInfo = {\r\n        ...this.props.ings\r\n    };\r\n    for ( let key in disableInfo){\r\n        disableInfo[key] = disableInfo[key] <= 0\r\n    }\r\n    let orderSummary = null;\r\n   \r\n    \r\n    let burger = this.state.error ? <p> Ingredients can't be loaded </p> :<Spinner />\r\n    if (this.props.ings){\r\n             burger =  (\r\n                <Aux>\r\n                        <Burger \r\n                        ingredients ={this.props.ings}/>\r\n                        \r\n                            <BuildControls \r\n                            ingredientsAdded ={this.props.onIngredientsAdded}\r\n                            ingredientsReduced ={this.props.onIngredientsRemove}\r\n                            disabled={disableInfo}\r\n                            price = {this.state.totalPrice}\r\n                            purchasable ={this.state.purchasable}\r\n                        ordered ={this.purchaseHandler}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n            ingredients = {this.props.ings}\r\n            purchaseCancelled = {this.purchaseCancelHandler}\r\n            purchaseContinue = {this.purchaseContinueHandler}\r\n            price = {this.state.totalPrice}\r\n            />;\r\n    }\r\n    if (this.state.loading){\r\n        orderSummary = <Spinner />\r\n    }\r\n//{salad:true, meat:false /true and so on}\r\n    return (\r\n        <Aux>\r\n            <Modal show={this.state.purchasing}\r\n            modalClosed ={this.purchaseCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n            \r\n        </Aux>\r\n    \r\n    );\r\n}\r\n}\r\n\r\n\r\nconst mapsStateToProps = state => {\r\n    return {\r\n            ings: state.ingredients,\r\n            price: state.totalPrice\r\n    };\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientsAdded: (ingName)=>dispatch({type:actionTypes.ADD_INGREDIENT, ingredientName:ingName}),\r\n        onIngredientsRemove: (ingName)=>dispatch({type:actionTypes.REMOVE_INGREDIENT, ingredientName:ingName})\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapsStateToProps,mapsDispatchToProps) (withErrorHandling(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}